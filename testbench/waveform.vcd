$version Generated by VerilatedVcd $end
$date Mon Apr 17 15:58:51 2023 $end
$timescale 1ps $end

 $scope module TOP $end
  $var wire 32 C! PC [31:0] $end
  $var wire 32 G! addr [31:0] $end
  $var wire  1 @! clk $end
  $var wire  1 J! en $end
  $var wire 32 B! inst [31:0] $end
  $var wire  1 E! inst_ready $end
  $var wire  1 D! pc_valid $end
  $var wire 32 F! rdata [31:0] $end
  $var wire  1 A! reset $end
  $var wire 32 H! wdata [31:0] $end
  $var wire  4 I! wmask [3:0] $end
  $scope module Top $end
   $var wire 32 C! PC [31:0] $end
   $var wire 32 G! addr [31:0] $end
   $var wire  1 @! clk $end
   $var wire 32 I difftest_Inst [31:0] $end
   $var wire 32 J difftest_PC [31:0] $end
   $var wire 103 B difftest_bus [102:0] $end
   $var wire  1 F difftest_inst_valid $end
   $var wire 32 K difftest_result [31:0] $end
   $var wire  1 H difftest_wreg_en $end
   $var wire  5 G difftest_wreg_index [4:0] $end
   $var wire  1 J! en $end
   $var wire 213 1 ex_bus [212:0] $end
   $var wire  1 K! ex_right_ready $end
   $var wire  1 8 ex_right_valid $end
   $var wire 182 & id_bus [181:0] $end
   $var wire  1 K! id_right_ready $end
   $var wire  1 0 id_right_valid $end
   $var wire 64 # if_bus [63:0] $end
   $var wire  1 K! if_right_ready $end
   $var wire  1 % if_right_valid $end
   $var wire 32 B! inst [31:0] $end
   $var wire  1 E! inst_ready $end
   $var wire 103 9 mem_bus [102:0] $end
   $var wire  1 K! mem_right_ready $end
   $var wire  1 = mem_right_valid $end
   $var wire  1 D! pc_valid $end
   $var wire 32 F! rdata [31:0] $end
   $var wire 32 . reg_data1 [31:0] $end
   $var wire 32 / reg_data2 [31:0] $end
   $var wire  5 , reg_index1 [4:0] $end
   $var wire  5 - reg_index2 [4:0] $end
   $var wire  1 A! reset $end
   $var wire 103 > wb_bus [102:0] $end
   $var wire 32 H! wdata [31:0] $end
   $var wire  4 I! wmask [3:0] $end
   $scope module DifftestInstrCommit $end
    $var wire  5 N! TLBFILL_index [4:0] $end
    $var wire  1 @! clock $end
    $var wire  8 L! coreid [7:0] $end
    $var wire 32 Q! csr_data [31:0] $end
    $var wire  1 M! csr_rstat $end
    $var wire  8 L! index [7:0] $end
    $var wire 32 I instr [31:0] $end
    $var wire  1 M! is_CNTinst $end
    $var wire  1 M! is_TLBFILL $end
    $var wire 64 L pc [63:0] $end
    $var wire  1 M! skip $end
    $var wire 64 O! timer_64_value [63:0] $end
    $var wire  1 F valid $end
    $var wire 64 O wdata [63:0] $end
    $var wire  8 N wdest [7:0] $end
    $var wire  1 H wen $end
   $upscope $end
   $scope module Regfile $end
    $var wire  1 @! clk $end
    $var wire 32 . data1 [31:0] $end
    $var wire 32 / data2 [31:0] $end
    $var wire  5 , reg_index1 [4:0] $end
    $var wire  5 - reg_index2 [4:0] $end
    $var wire  1 A! reset $end
    $var wire 32 T rf[0] [31:0] $end
    $var wire 32 ^ rf[10] [31:0] $end
    $var wire 32 _ rf[11] [31:0] $end
    $var wire 32 ` rf[12] [31:0] $end
    $var wire 32 a rf[13] [31:0] $end
    $var wire 32 b rf[14] [31:0] $end
    $var wire 32 c rf[15] [31:0] $end
    $var wire 32 d rf[16] [31:0] $end
    $var wire 32 e rf[17] [31:0] $end
    $var wire 32 f rf[18] [31:0] $end
    $var wire 32 g rf[19] [31:0] $end
    $var wire 32 U rf[1] [31:0] $end
    $var wire 32 h rf[20] [31:0] $end
    $var wire 32 i rf[21] [31:0] $end
    $var wire 32 j rf[22] [31:0] $end
    $var wire 32 k rf[23] [31:0] $end
    $var wire 32 l rf[24] [31:0] $end
    $var wire 32 m rf[25] [31:0] $end
    $var wire 32 n rf[26] [31:0] $end
    $var wire 32 o rf[27] [31:0] $end
    $var wire 32 p rf[28] [31:0] $end
    $var wire 32 q rf[29] [31:0] $end
    $var wire 32 V rf[2] [31:0] $end
    $var wire 32 r rf[30] [31:0] $end
    $var wire 32 s rf[31] [31:0] $end
    $var wire 32 W rf[3] [31:0] $end
    $var wire 32 X rf[4] [31:0] $end
    $var wire 32 Y rf[5] [31:0] $end
    $var wire 32 Z rf[6] [31:0] $end
    $var wire 32 [ rf[7] [31:0] $end
    $var wire 32 \ rf[8] [31:0] $end
    $var wire 32 ] rf[9] [31:0] $end
    $var wire 32 R wdata [31:0] $end
    $var wire  1 Q wreg_en $end
    $var wire  5 S wreg_index [4:0] $end
   $upscope $end
   $scope module exe_stage $end
    $var wire 32 v Imm [31:0] $end
    $var wire 32 } Inst [31:0] $end
    $var wire 32 z PC [31:0] $end
    $var wire 14 u alu_op [13:0] $end
    $var wire 32 ~ alu_result [31:0] $end
    $var wire  1 @! clk $end
    $var wire 213 1 ctrl_temp_bus [212:0] $end
    $var wire 213 1 ex_ctrl_bus [212:0] $end
    $var wire 182 & id_ctrl_bus [181:0] $end
    $var wire  1 y inst_valid $end
    $var wire  1 t is_sign $end
    $var wire  1 K! left_ready $end
    $var wire  1 0 left_valid $end
    $var wire  1 A! reset $end
    $var wire  1 8 right_fire $end
    $var wire  1 K! right_ready $end
    $var wire  1 8 right_valid $end
    $var wire 32 w src1 [31:0] $end
    $var wire 32 x src2 [31:0] $end
    $var wire  1 8 valid $end
    $var wire  1 { wreg_en $end
    $var wire  5 | wreg_index [4:0] $end
    $scope module alu $end
     $var wire 32 R! add_result [31:0] $end
     $var wire 32 S! adder_a [31:0] $end
     $var wire 32 T! adder_b [31:0] $end
     $var wire  1 U! adder_cin $end
     $var wire  1 W! adder_cout $end
     $var wire 32 V! adder_result [31:0] $end
     $var wire 14 u alu_op [13:0] $end
     $var wire 32 ~ alu_result [31:0] $end
     $var wire 32 w alu_src1 [31:0] $end
     $var wire 32 x alu_src2 [31:0] $end
     $var wire  1 !! op_add $end
    $upscope $end
   $upscope $end
   $scope module id_stage $end
    $var wire 32 X! Imm [31:0] $end
    $var wire 32 "! Inst [31:0] $end
    $var wire 32 #! PC [31:0] $end
    $var wire 14 $! alu_op [13:0] $end
    $var wire 182 & bus_temp [181:0] $end
    $var wire  1 @! clk $end
    $var wire 182 & ctrl_bus [181:0] $end
    $var wire 32 0! decoder_op_19_15 [31:0] $end
    $var wire  4 /! decoder_op_21_20 [3:0] $end
    $var wire 16 .! decoder_op_25_22 [15:0] $end
    $var wire 32 -! decoder_op_31_26 [31:0] $end
    $var wire  1 '! inst_add $end
    $var wire  1 Y! inst_or $end
    $var wire  1 '! inst_valid $end
    $var wire  1 M! is_sign $end
    $var wire  1 M! is_sign_extend $end
    $var wire  1 K! left_ready $end
    $var wire  1 % left_valid $end
    $var wire  5 ,! op_19_15 [4:0] $end
    $var wire  2 +! op_21_20 [1:0] $end
    $var wire  4 *! op_25_22 [3:0] $end
    $var wire  6 )! op_31_26 [5:0] $end
    $var wire  5 (! rd [4:0] $end
    $var wire 32 . reg_data1 [31:0] $end
    $var wire 32 / reg_data2 [31:0] $end
    $var wire  5 , reg_index1 [4:0] $end
    $var wire  5 - reg_index2 [4:0] $end
    $var wire  1 A! reset $end
    $var wire  1 0 right_fire $end
    $var wire  1 K! right_ready $end
    $var wire  1 0 right_valid $end
    $var wire  5 , rj [4:0] $end
    $var wire  5 - rk [4:0] $end
    $var wire  2 1! select_src1 [1:0] $end
    $var wire  2 2! select_src2 [1:0] $end
    $var wire 32 %! src1 [31:0] $end
    $var wire 32 &! src2 [31:0] $end
    $var wire  1 0 valid $end
    $var wire  1 '! wreg_en $end
    $var wire  5 (! wreg_index [4:0] $end
    $scope module decoder_2_4 $end
     $var wire  2 +! in [1:0] $end
     $var wire  4 /! out [3:0] $end
    $upscope $end
    $scope module decoder_4_16 $end
     $var wire  4 *! in [3:0] $end
     $var wire 16 .! out [15:0] $end
    $upscope $end
    $scope module decoder_5_32_0 $end
     $var wire  5 3! in [4:0] $end
     $var wire 32 -! out [31:0] $end
    $upscope $end
    $scope module decoder_5_32_1 $end
     $var wire  5 ,! in [4:0] $end
     $var wire 32 0! out [31:0] $end
    $upscope $end
   $upscope $end
   $scope module if_stage $end
    $var wire 32 B! Inst [31:0] $end
    $var wire 32 C! PC [31:0] $end
    $var wire 64 # bus_temp [63:0] $end
    $var wire  1 @! clk $end
    $var wire 64 # data_bus [63:0] $end
    $var wire  1 E! inst_ready $end
    $var wire  1 D! pc_valid $end
    $var wire  1 A! reset $end
    $var wire  1 % right_fire $end
    $var wire  1 K! right_ready $end
    $var wire  1 % right_valid $end
    $var wire 32 4! temp [31:0] $end
    $var wire  1 % valid $end
   $upscope $end
   $scope module mem_stage $end
    $var wire 32 8! Imm [31:0] $end
    $var wire 32 :! Inst [31:0] $end
    $var wire 32 9! PC [31:0] $end
    $var wire 32 G! addr [31:0] $end
    $var wire 14 6! alu_op [13:0] $end
    $var wire 32 5! alu_result [31:0] $end
    $var wire 103 9 bus_temp [102:0] $end
    $var wire  1 @! clk $end
    $var wire  1 J! en $end
    $var wire  1 7! inst_valid $end
    $var wire  1 K! left_ready $end
    $var wire  1 8 left_valid $end
    $var wire 213 1 mem_ctrl_bus [212:0] $end
    $var wire 32 5! mem_result [31:0] $end
    $var wire 32 F! rdata [31:0] $end
    $var wire  1 A! reset $end
    $var wire  1 = right_fire $end
    $var wire  1 K! right_ready $end
    $var wire  1 = right_valid $end
    $var wire 32 =! src1 [31:0] $end
    $var wire 32 >! src2 [31:0] $end
    $var wire  1 = valid $end
    $var wire 103 9 wb_ctrl_bus [102:0] $end
    $var wire 32 H! wdata [31:0] $end
    $var wire  4 I! wmask [3:0] $end
    $var wire  1 <! wreg_en $end
    $var wire  5 ;! wreg_index [4:0] $end
   $upscope $end
   $scope module wb_syage $end
    $var wire 103 > bus_temp [102:0] $end
    $var wire  1 @! clk $end
    $var wire  1 K! left_ready $end
    $var wire  1 = left_valid $end
    $var wire 103 9 mem_ctrl_bus [102:0] $end
    $var wire  1 A! reset $end
    $var wire  1 ?! right_fire $end
    $var wire  1 K! right_ready $end
    $var wire  1 ?! right_valid $end
    $var wire  1 ?! valid $end
    $var wire 103 > wb_ctrl_bus [102:0] $end
   $upscope $end
  $upscope $end
 $upscope $end
$enddefinitions $end


#0
b0000000000000000000000000000000000000000000000000000000000000000 #
0%
b00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 &
b00000 ,
b00000 -
b00000000000000000000000000000000 .
b00000000000000000000000000000000 /
00
b000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 1
08
b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 9
0=
b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 >
b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 B
0F
b00000 G
0H
b00000000000000000000000000000000 I
b00000000000000000000000000000000 J
b00000000000000000000000000000000 K
b0000000000000000000000000000000000000000000000000000000000000000 L
b00000000 N
b0000000000000000000000000000000000000000000000000000000000000000 O
0Q
b00000000000000000000000000000000 R
b00000 S
b00000000000000000000000000000000 T
b00000000000000000000000000000000 U
b00000000000000000000000000000000 V
b00000000000000000000000000000000 W
b00000000000000000000000000000000 X
b00000000000000000000000000000000 Y
b00000000000000000000000000000000 Z
b00000000000000000000000000000000 [
b00000000000000000000000000000000 \
b00000000000000000000000000000000 ]
b00000000000000000000000000000000 ^
b00000000000000000000000000000000 _
b00000000000000000000000000000000 `
b00000000000000000000000000000000 a
b00000000000000000000000000000000 b
b00000000000000000000000000000000 c
b00000000000000000000000000000000 d
b00000000000000000000000000000000 e
b00000000000000000000000000000000 f
b00000000000000000000000000000000 g
b00000000000000000000000000000000 h
b00000000000000000000000000000000 i
b00000000000000000000000000000000 j
b00000000000000000000000000000000 k
b00000000000000000000000000000000 l
b00000000000000000000000000000000 m
b00000000000000000000000000000000 n
b00000000000000000000000000000000 o
b00000000000000000000000000000000 p
b00000000000000000000000000000000 q
b00000000000000000000000000000000 r
b00000000000000000000000000000000 s
0t
b00000000000000 u
b00000000000000000000000000000000 v
b00000000000000000000000000000000 w
b00000000000000000000000000000000 x
0y
b00000000000000000000000000000000 z
0{
b00000 |
b00000000000000000000000000000000 }
b00000000000000000000000000000000 ~
0!!
b00000000000000000000000000000000 "!
b00000000000000000000000000000000 #!
b00000000000000 $!
b00000000000000000000000000000000 %!
b00000000000000000000000000000000 &!
0'!
b00000 (!
b000000 )!
b0000 *!
b00 +!
b00000 ,!
b00000000000000000000000000000001 -!
b0000000000000001 .!
b0001 /!
b00000000000000000000000000000001 0!
b11 1!
b11 2!
b00000 3!
b00000000000000000000000000000000 4!
b00000000000000000000000000000000 5!
b00000000000000 6!
07!
b00000000000000000000000000000000 8!
b00000000000000000000000000000000 9!
b00000000000000000000000000000000 :!
b00000 ;!
0<!
b00000000000000000000000000000000 =!
b00000000000000000000000000000000 >!
0?!
1@!
1A!
b00000000000000000000000000000000 B!
b00000000000000000000000000000000 C!
1D!
0E!
b00000000000000000000000000000000 F!
b00000000000000000000000000000000 G!
b00000000000000000000000000000000 H!
b0000 I!
0J!
1K!
b00000000 L!
0M!
b00000 N!
b0000000000000000000000000000000000000000000000000000000000000000 O!
b00000000000000000000000000000000 Q!
b00000000000000000000000000000000 R!
b00000000000000000000000000000000 S!
b00000000000000000000000000000000 T!
0U!
b00000000000000000000000000000000 V!
0W!
b00000000000000000000000000000000 X!
0Y!
#1
0@!
#2
1@!
#3
0@!
#4
1@!
#5
0@!
0A!
b00000000000100000000000000010001 B!
1E!
#6
b0000000000000000000000000000000000000000000100000000000000010001 #
1%
b00000000000100000000000000010001 "!
b00000000000001 $!
1'!
b10001 (!
b01 +!
b0010 /!
b00 1!
b00 2!
1@!
#7
0@!
#8
b00000000000000110000000000000000000000000000000000000000000100000000000000010001100011000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 &
10
b00000000000001 u
1y
1{
b10001 |
b00000000000100000000000000010001 }
1!!
b00000000000000000000000000000100 4!
1@!
b00000000000000000000000000000100 C!
#9
0@!
b00000000000000000000000000000000 B!
#10
b0000000000000000000000000000010000000000000000000000000000000000 #
b000000000000011000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000010001100011000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 1
18
b00000000000000000000000000000000 "!
b00000000000000000000000000000100 #!
b00000000000000 $!
b00000000000000000000000000000100 %!
b00000000000000000000000000000100 &!
0'!
b00000 (!
b00 +!
b0001 /!
b11 1!
b11 2!
b00000000000000000000000000001000 4!
b00000000000001 6!
17!
b00000000000100000000000000010001 :!
b10001 ;!
1<!
1@!
b00000000000000000000000000001000 C!
#11
0@!
#12
b0000000000000000000000000000100000000000000000000000000000000000 #
b00000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000000 &
b1100011000000000001000000000000000100010000000000000000000000000000000000000000000000000000000000000000 9
1=
b00000000000000 u
b00000000000000000000000000000100 w
b00000000000000000000000000000100 x
0y
b00000000000000000000000000000100 z
0{
b00000 |
b00000000000000000000000000000000 }
0!!
b00000000000000000000000000001000 #!
b00000000000000000000000000001000 %!
b00000000000000000000000000001000 &!
b00000000000000000000000000001100 4!
1@!
b00000000000000000000000000001100 C!
#13
0@!
#14
b0000000000000000000000000000110000000000000000000000000000000000 #
b00000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000100000000000000000000000000000000000 &
b000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000000 1
b1100011000000000001000000000000000100010000000000000000000000000000000000000000000000000000000000000000 >
1Q
b10001 S
b00000000000000000000000000001000 w
b00000000000000000000000000001000 x
b00000000000000000000000000001000 z
b00000000000000000000000000001100 #!
b00000000000000000000000000001100 %!
b00000000000000000000000000001100 &!
b00000000000000000000000000010000 4!
b00000000000000 6!
07!
b00000000000000000000000000000100 9!
b00000000000000000000000000000000 :!
b00000 ;!
0<!
b00000000000000000000000000000100 =!
b00000000000000000000000000000100 >!
1?!
1@!
b00000000000000000000000000010000 C!
#15
0@!
#16
b0000000000000000000000000001000000000000000000000000000000000000 #
b00000000000000000000000000000000000000000000110000000000000000000000000000000000000000000000000000000000000000000011000000000000000000000000000000110000000000000000000000000000000000 &
b000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000100000000000000000000000000000000000 1
b0000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000 9
b1100011000000000001000000000000000100010000000000000000000000000000000000000000000000000000000000000000 B
1F
b10001 G
1H
b00000000000100000000000000010001 I
b00010001 N
b00000000000000000000000000001100 w
b00000000000000000000000000001100 x
b00000000000000000000000000001100 z
b00000000000000000000000000010000 #!
b00000000000000000000000000010000 %!
b00000000000000000000000000010000 &!
b00000000000000000000000000010100 4!
b00000000000000000000000000001000 9!
b00000000000000000000000000001000 =!
b00000000000000000000000000001000 >!
1@!
b00000000000000000000000000010100 C!
#17
0@!
#18
b0000000000000000000000000001010000000000000000000000000000000000 #
b00000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000001000000000000000000000000000000000000 &
b000000000000000000000000000000000000000000000000000000000000000000000000000110000000000000000000000000000000000000000000000000000000000000000000011000000000000000000000000000000110000000000000000000000000000000000 1
b0000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000 9
b0000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000 >
0Q
b00000 S
b00000000000000000000000000010000 w
b00000000000000000000000000010000 x
b00000000000000000000000000010000 z
b00000000000000000000000000010100 #!
b00000000000000000000000000010100 %!
b00000000000000000000000000010100 &!
b00000000000000000000000000011000 4!
b00000000000000000000000000001100 9!
b00000000000000000000000000001100 =!
b00000000000000000000000000001100 >!
1@!
b00000000000000000000000000011000 C!
